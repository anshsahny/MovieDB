{"ast":null,"code":"var _jsxFileName = \"/Users/anshsahny/Ansh/Web Applications/MovieDB/client/src/components/Home/Home.js\";\nimport React, { Component } from 'react';\nimport { API_KEY, API_URL, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      heroImage: null,\n      loading: false,\n      currentPage: 0,\n      totalPages: 0,\n      searchTerm: ''\n    };\n\n    this.createEndpoint = (type, loadMore, searchTerm) => {\n      return `${API_URL}${type}?api_key=${API_KEY}&language=en-US&page=${loadMore && this.state.currentPage + 1}&query=${searchTerm}`;\n    };\n\n    this.updateItems = (loadMore, searchTerm) => {\n      this.setState({\n        movies: loadMore ? [...this.state.movies] : [],\n        loading: true,\n        searchTerm: loadMore ? this.state.searchTerm : searchTerm\n      }, () => {\n        this.fetchItems(!this.state.searchTerm ? this.createEndpoint(\"movie/popular\", loadMore, \"\") : this.createEndpoint(\"search/movie\", loadMore, this.state.searchTerm));\n      });\n    };\n\n    this.fetchItems = async endpoint => {\n      const {\n        movies,\n        heroImage,\n        searchTerm\n      } = this.state;\n      const result = await (await fetch(endpoint)).json();\n\n      try {\n        this.setState({\n          movies: [...movies, ...result.results],\n          heroImage: heroImage || result.results[0],\n          loading: false,\n          currentPage: result.page,\n          totalPages: result.total_pages\n        }, () => {\n          if (searchTerm === \"\") {\n            localStorage.setItem(\"HomeState\", JSON.stringify(this.state));\n          }\n        });\n      } catch (e) {\n        console.log(\"There was an error: \", e);\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"HomeState\")) {\n      const state = JSON.parse(localStorage.getItem(\"HomeState\"));\n      this.setState({ ...state\n      });\n    } else {\n      this.setState({\n        loading: true\n      }); // const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`\n\n      this.fetchItems(this.createEndpoint(\"movie/popular\", false, \"\"));\n    }\n  }\n\n  // fetchItems = (endpoint) => {\n  //     fetch(endpoint).then(result => result.json()).then(result => {\n  //         this.setState({\n  //             movies: [...this.state.movies, ...result.results],\n  //             heroImage: this.state.heroImage || result.results[0],\n  //             loading: false,\n  //             currentPage : result.page,\n  //             totalPages: result.total_pages\n  //         }, () => {\n  //             localStorage.setItem(\"HomeState\", JSON.stringify(this.state))\n  //         })\n  //     })\n  // }\n  render() {\n    const {\n      movies,\n      heroImage,\n      loading,\n      currentPage,\n      totalPages,\n      searchTerm\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rmdb-home\",\n      children: [heroImage && !searchTerm ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(HeroImage, {\n          image: `${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`,\n          title: heroImage.original_title,\n          text: heroImage.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rmdb-home-grid\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          callback: this.updateItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FourColGrid, {\n          header: searchTerm ? 'Search Result' : 'Popular Movies',\n          loading: loading,\n          children: movies.map((element, i) => {\n            return /*#__PURE__*/_jsxDEV(MovieThumb, {\n              clickable: true,\n              image: element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg',\n              movieId: element.id,\n              movieName: element.original_title\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 32\n        }, this) : null, currentPage <= totalPages && !loading ? /*#__PURE__*/_jsxDEV(LoadMoreBtn, {\n          text: \"Load More\",\n          onClick: this.updateItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 64\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/anshsahny/Ansh/Web Applications/MovieDB/client/src/components/Home/Home.js"],"names":["React","Component","API_KEY","API_URL","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","HeroImage","MovieThumb","SearchBar","FourColGrid","LoadMoreBtn","Spinner","Home","state","movies","heroImage","loading","currentPage","totalPages","searchTerm","createEndpoint","type","loadMore","updateItems","setState","fetchItems","endpoint","result","fetch","json","results","page","total_pages","localStorage","setItem","JSON","stringify","e","console","log","componentDidMount","getItem","parse","render","backdrop_path","original_title","overview","map","element","i","poster_path","id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport { API_KEY, API_URL, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config'\nimport HeroImage from '../elements/HeroImage/HeroImage'\nimport MovieThumb from '../elements/MovieThumb/MovieThumb'\nimport SearchBar from '../elements/SearchBar/SearchBar'\nimport FourColGrid from '../elements/FourColGrid/FourColGrid'\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn'\nimport Spinner from '../elements/Spinner/Spinner'\nimport './Home.css'\n\nclass Home extends Component {\n    state = {\n        movies: [],\n        heroImage: null,\n        loading: false,\n        currentPage: 0,\n        totalPages: 0,\n        searchTerm: ''\n    }\n    \n    componentDidMount() {\n        if (localStorage.getItem(\"HomeState\")) {\n            const state = JSON.parse(localStorage.getItem(\"HomeState\"))\n            this.setState({...state})\n        } else {\n            this.setState({loading: true})\n            // const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`\n            this.fetchItems(this.createEndpoint(\"movie/popular\",false,\"\"))\n        } \n    }\n\n    createEndpoint = (type, loadMore, searchTerm) => {\n        return `${API_URL}${type}?api_key=${API_KEY}&language=en-US&page=${loadMore && this.state.currentPage + 1}&query=${searchTerm}`\n    }\n\n    updateItems = (loadMore, searchTerm) => {\n        this.setState({\n            movies: loadMore ? [...this.state.movies] : [],\n            loading: true,\n            searchTerm: loadMore ? this.state.searchTerm : searchTerm\n        }, () => {\n            this.fetchItems(!this.state.searchTerm ? this.createEndpoint(\"movie/popular\", loadMore, \"\") : this.createEndpoint(\"search/movie\", loadMore, this.state.searchTerm))\n        })\n    }\n\n    // searchItems = (searchTerm) => {\n    //     let endpoint = ''\n    //     this.setState({\n    //         movies: [],\n    //         loading: true,\n    //         searchTerm\n    //     })\n\n    //     if (searchTerm === '') {\n    //         endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`\n    //     } else {\n    //         endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}`\n    //     }\n\n    //     this.fetchItems(endpoint)\n    // }\n\n    // loadMoreItems = () => {\n    //     let endpoint = ''\n    //     this.setState({loading: true})\n\n    //     if (this.state.searchTerm === '') {\n    //         endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`\n    //     } else {\n    //         endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`\n    //     }\n\n    //     this.fetchItems(endpoint)\n    // }\n\n    fetchItems = async endpoint => {\n        const {movies, heroImage, searchTerm} = this.state\n        const result = await(await fetch (endpoint)).json()\n        try {\n            this.setState({\n                movies: [...movies, ...result.results],\n                heroImage: heroImage || result.results[0],\n                loading: false,\n                currentPage : result.page,\n                totalPages: result.total_pages\n            }, () => {\n                if (searchTerm === \"\") {\n                    localStorage.setItem(\"HomeState\", JSON.stringify(this.state))\n                }           \n            })\n        }\n        catch (e) {\n            console.log(\"There was an error: \", e)\n        }\n    }\n\n    // fetchItems = (endpoint) => {\n    //     fetch(endpoint).then(result => result.json()).then(result => {\n    //         this.setState({\n    //             movies: [...this.state.movies, ...result.results],\n    //             heroImage: this.state.heroImage || result.results[0],\n    //             loading: false,\n    //             currentPage : result.page,\n    //             totalPages: result.total_pages\n    //         }, () => {\n    //             localStorage.setItem(\"HomeState\", JSON.stringify(this.state))\n    //         })\n    //     })\n    // }\n\n    render() {\n        const { movies, heroImage, loading, currentPage, totalPages, searchTerm } = this.state\n        return (\n            <div className=\"rmdb-home\">\n                {heroImage && !searchTerm ?\n                    <div>\n                    <HeroImage image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`} title={heroImage.original_title} text={heroImage.overview}/>\n                    </div> \n                : null}\n                <div className=\"rmdb-home-grid\">\n                    <SearchBar callback={this.updateItems}/>\n                    <FourColGrid header={searchTerm ? 'Search Result' : 'Popular Movies'} loading={loading}>\n                        {movies.map((element, i) => {\n                            return <MovieThumb key={i} clickable={true} image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'} movieId={element.id} movieName={element.original_title}/>\n                        })}\n                    </FourColGrid>\n                    {loading ? <Spinner/> : null}\n                    {(currentPage <= totalPages && !loading) ? <LoadMoreBtn text=\"Load More\" onClick={this.updateItems}/> : null}\n                </div>\n            </div>\n        ) \n    }\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}