{"ast":null,"code":"var _jsxFileName = \"/Users/anshsahny/Ansh/Web Applications/MovieDB/client/src/components/Movie/Movie.js\";\nimport React, { Component } from 'react';\nimport { API_KEY, API_URL } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport \"./Movie.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Movie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: null,\n      actors: null,\n      director: [],\n      loading: false\n    };\n\n    this.fetchItems = endpoint => {\n      fetch(endpoint).then(result => result.json()).then(result => {\n        console.log(result);\n\n        if (result.status_code) {\n          this.setState({\n            loading: false\n          });\n        } else {\n          this.setState({\n            movie: result\n          }, () => {\n            const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\n            fetch(endpoint).then(result => result.json()).then(result => {\n              console.log(result);\n              const director = result.crew.filter(member => member.job === \"Director\");\n              this.setState({\n                actors: result.cast,\n                director,\n                loading: false\n              });\n            });\n          });\n        }\n      }).catch(error => console.error(\"Error:\", error));\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\n    this.fetchItems(endpoint);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rmdb-movie\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MovieInfoBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["/Users/anshsahny/Ansh/Web Applications/MovieDB/client/src/components/Movie/Movie.js"],"names":["React","Component","API_KEY","API_URL","Navigation","MovieInfo","MovieInfoBar","FourColGrid","Actor","Spinner","Movie","state","movie","actors","director","loading","fetchItems","endpoint","fetch","then","result","json","console","log","status_code","setState","props","match","params","movieId","crew","filter","member","job","cast","catch","error","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,cAA/B;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAO,aAAP;;;AAEA,MAAMC,KAAN,SAAoBT,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BU,KAD0B,GAClB;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,MAAM,EAAE,IAFJ;AAGJC,MAAAA,QAAQ,EAAE,EAHN;AAIJC,MAAAA,OAAO,EAAE;AAJL,KADkB;;AAAA,SAc1BC,UAd0B,GAcZC,QAAD,IAAc;AACvBC,MAAAA,KAAK,CAACD,QAAD,CAAL,CAAgBE,IAAhB,CAAqBC,MAAM,IAAIA,MAAM,CAACC,IAAP,EAA/B,EAA8CF,IAA9C,CAAmDC,MAAM,IAAI;AACzDE,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AACA,YAAIA,MAAM,CAACI,WAAX,EAAwB;AACpB,eAAKC,QAAL,CAAc;AAACV,YAAAA,OAAO,EAAE;AAAV,WAAd;AACH,SAFD,MAEO;AACH,eAAKU,QAAL,CAAc;AACVb,YAAAA,KAAK,EAAEQ;AADG,WAAd,EAEG,MAAM;AACL,kBAAMH,QAAQ,GAAI,GAAEd,OAAQ,SAAQ,KAAKuB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAAQ,oBAAmB3B,OAAQ,EAA/F;AACAgB,YAAAA,KAAK,CAACD,QAAD,CAAL,CAAgBE,IAAhB,CAAqBC,MAAM,IAAIA,MAAM,CAACC,IAAP,EAA/B,EAA8CF,IAA9C,CAAmDC,MAAM,IAAI;AACzDE,cAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,oBAAMN,QAAQ,GAAGM,MAAM,CAACU,IAAP,CAAYC,MAAZ,CAAmBC,MAAM,IAAIA,MAAM,CAACC,GAAP,KAAe,UAA5C,CAAjB;AACA,mBAAKR,QAAL,CAAc;AACVZ,gBAAAA,MAAM,EAAEO,MAAM,CAACc,IADL;AAEVpB,gBAAAA,QAFU;AAGVC,gBAAAA,OAAO,EAAE;AAHC,eAAd;AAKH,aARD;AASH,WAbD;AAcH;AACJ,OApBD,EAoBGoB,KApBH,CAoBSC,KAAK,IAAId,OAAO,CAACc,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CApBlB;AAqBH,KApCyB;AAAA;;AAQ1BC,EAAAA,iBAAiB,GAAG;AAChB,SAAKZ,QAAL,CAAc;AAACV,MAAAA,OAAO,EAAE;AAAV,KAAd;AACA,UAAME,QAAQ,GAAI,GAAEd,OAAQ,SAAQ,KAAKuB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAAQ,YAAW3B,OAAQ,iBAAvF;AACA,SAAKc,UAAL,CAAgBC,QAAhB;AACH;;AA0BDqB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAHJ,eAKI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAhDyB;;AAmD9B,eAAe5B,KAAf","sourcesContent":["import React, {Component} from 'react'\nimport {API_KEY, API_URL} from '../../config'\nimport Navigation from '../elements/Navigation/Navigation'\nimport MovieInfo from '../elements/MovieInfo/MovieInfo'\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar'\nimport FourColGrid from '../elements/FourColGrid/FourColGrid'\nimport Actor from '../elements/Actor/Actor'\nimport Spinner from '../elements/Spinner/Spinner'\nimport \"./Movie.css\"\n\nclass Movie extends Component {\n    state = {\n        movie: null,\n        actors: null,\n        director: [],\n        loading: false\n    }\n\n    componentDidMount() {\n        this.setState({loading: true})\n        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`\n        this.fetchItems(endpoint)\n    }\n\n    fetchItems = (endpoint) => {\n        fetch(endpoint).then(result => result.json()).then(result => {\n            console.log(result)\n            if (result.status_code) {\n                this.setState({loading: false})\n            } else {\n                this.setState({\n                    movie: result,\n                }, () => {\n                    const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`\n                    fetch(endpoint).then(result => result.json()).then(result => {\n                        console.log(result)\n                        const director = result.crew.filter(member => member.job === \"Director\")\n                        this.setState({\n                            actors: result.cast,\n                            director,\n                            loading: false\n                        })\n                    })\n                })\n            }\n        }).catch(error => console.error(\"Error:\", error))\n    }\n\n    render() {\n        return (\n            <div className=\"rmdb-movie\">\n                <Navigation/>\n                <MovieInfo/>\n                <MovieInfoBar/>\n                {/* <FourColGrid/> */}\n                <Spinner/>\n            </div>\n        )\n    }\n}\n\nexport default Movie"]},"metadata":{},"sourceType":"module"}